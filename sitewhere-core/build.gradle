description = 'SiteWhere Core Library'

dependencies {
    compile project(':sitewhere-core-lifecycle')
    
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
	
	// Date/time conversions.
    compile group: 'joda-time', name: 'joda-time', version:'2.9.1'
	
	// Jackson JSON processing.
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${rootProject.ext['jackson.version']}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${rootProject.ext['jackson.version']}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${rootProject.ext['jackson.version']}"
    
    // Retry logic.
    compile "com.evanlennick:retry4j:0.15.0"
    
    // Geolocation classes made available to scripts.
	compile group: 'com.vividsolutions', name: 'jts', version:'1.13'
}

license {
	exclude "**/core/Base58*"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.properties'
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [
            'build.timestamp': new java.text.SimpleDateFormat('yyyyMMddHHmmss').format(new Date()),
            'version.identifier' : project.version,
            'git.revision': rootProject.ext['git.revision'],
            'git.revision.abbrev': rootProject.ext['git.revision.abbrev']
        ])
    }
}

// Publish jar.
apply plugin: 'maven-publish'
publishing {
	publications {
        mavenJava(MavenPublication) {
            from components.java
        }
	}
}
