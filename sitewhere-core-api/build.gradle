description = 'SiteWhere Core API'

dependencies {
	// SiteWhere model/API.
    compile group: 'com.sitewhere', name: 'sitewhere-java-model', version: '3.0.0.alpha1'
	compile group: 'com.sitewhere', name: 'sitewhere-k8s-model', version: '0.0.9'
	
	// Apache Kafka for reliable data pipeline.
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: "${rootProject.ext['kafka.version']}"
    
    // Groovy for dynamic processing.
    compile group: 'org.codehaus.groovy', name: 'groovy', version: "${rootProject.ext['groovy.version']}"
    
    // JSON web token support.
    compile group: 'io.jsonwebtoken', name: 'jjwt', version:'0.7.0'
    
    // SLF4J Extension for i18n
    compile group: 'org.slf4j', name: 'slf4j-ext', version: '1.7.25'
    compile group: 'ch.qos.cal10n', name: 'cal10n-api', version: '0.7.7'    
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

// Publish jar.	
apply plugin: 'maven-publish'
publishing {
	publications {
		mavenJava(MavenPublication) {
		    from components.java
            artifact sourcesJar
            artifact javadocJar
			pom {
			    name = 'SiteWhere Core API'
			    description = 'SiteWhere Core Runtime API'
			    url = 'http://sitewhere.io'
			    licenses {
			        license {
			            name = 'CPAL-1.0'
			            url = 'https://opensource.org/licenses/CPAL-1.0'
			        }
			    }
                developers {
                    developer {
                        id = 'admin'
                        name = 'SiteWhere Admin'
                        email = 'admin@sitewhere.com'
                    }
                }
                scm {
                    connection = 'https://github.com/sitewhere/sitewhere-microservice-core.git'
                    url = 'https://github.com/sitewhere/sitewhere-microservice-core'
                }
			}	
		}
	}
    repositories {
        maven {
            url project.nexusUrl
            credentials {
                username project.nexusUsername
                password project.nexusPassword
            }
        }
    }
}

apply plugin: 'signing'
signing {
    sign publishing.publications.mavenJava
}

